syntax = "proto3";

package document;

// 文档服务
service DocumentService {
  // 文档管理
  rpc UploadDocument(UploadDocumentRequest) returns (DocumentResponse);
  rpc GetDocument(GetDocumentRequest) returns (DocumentResponse);
  rpc GetDocuments(GetDocumentsRequest) returns (DocumentListResponse);
  rpc DeleteDocument(DeleteDocumentRequest) returns (DeleteResponse);
  
  // 文档解析
  rpc ParseDocument(ParseDocumentRequest) returns (ParseResultResponse);
  rpc GetParseResult(GetParseResultRequest) returns (ParseResultResponse);
  
  // OCR识别
  rpc RecognizeImage(RecognizeImageRequest) returns (RecognizeResponse);
  
  // 文档预处理
  rpc ExtractText(ExtractTextRequest) returns (ExtractTextResponse);
  rpc ExtractImages(ExtractImagesRequest) returns (ExtractImagesResponse);
}

// ==================== 文档管理 ====================

message UploadDocumentRequest {
  string userId = 1;
  string fileName = 2;
  string fileType = 3; // 'pdf' | 'docx' | 'pptx' | 'image'
  string fileUrl = 4; // 上传到OSS后的URL
  int64 fileSize = 5;
  string categoryId = 6;
  string description = 7;
}

message GetDocumentRequest {
  string documentId = 1;
}

message GetDocumentsRequest {
  string userId = 1;
  string categoryId = 2;
  string fileType = 3;
  int32 page = 4;
  int32 limit = 5;
}

message DocumentResponse {
  string id = 1;
  string userId = 2;
  string fileName = 3;
  string fileType = 4;
  string fileUrl = 5;
  int64 fileSize = 6;
  string categoryId = 7;
  string description = 8;
  string parseStatus = 9; // 'pending' | 'parsing' | 'completed' | 'failed'
  string parseResultId = 10;
  string createdAt = 11;
  string updatedAt = 12;
}

message DocumentListResponse {
  repeated DocumentResponse documents = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
}

message DeleteDocumentRequest {
  string documentId = 1;
  string userId = 2;
}

message DeleteResponse {
  bool success = 1;
  string message = 2;
}

// ==================== 文档解析 ====================

message ParseDocumentRequest {
  string documentId = 1;
  bool extractKnowledgePoints = 2;
  bool extractKeywords = 3;
  bool generateSummary = 4;
  bool identifyChapters = 5;
}

message GetParseResultRequest {
  string documentId = 1;
}

message ParseResultResponse {
  string id = 1;
  string documentId = 2;
  string rawText = 3;
  repeated Chapter chapters = 4;
  repeated KnowledgePoint knowledgePoints = 5;
  repeated string keywords = 6;
  string summary = 7;
  int32 pageCount = 8;
  int32 wordCount = 9;
  string language = 10; // 'zh' | 'en'
  string parseStatus = 11;
  string createdAt = 12;
}

message Chapter {
  string title = 1;
  int32 level = 2; // 1-5
  int32 startPage = 3;
  int32 endPage = 4;
  string content = 5;
  repeated Chapter subChapters = 6;
}

message KnowledgePoint {
  string name = 1;
  string description = 2;
  string category = 3;
  int32 importance = 4; // 1-5
  repeated string relatedPages = 5;
}

// ==================== OCR识别 ====================

message RecognizeImageRequest {
  string imageUrl = 1;
  string language = 2; // 'chi_sim' | 'eng' | 'auto'
  bool detectFormulas = 3; // 是否识别数学公式
}

message RecognizeResponse {
  string text = 1;
  repeated TextBlock textBlocks = 2;
  repeated Formula formulas = 3;
  double confidence = 4; // 识别置信度 0-1
}

message TextBlock {
  string text = 1;
  BoundingBox box = 2;
  double confidence = 3;
}

message Formula {
  string latex = 1; // LaTeX格式的公式
  BoundingBox box = 2;
}

message BoundingBox {
  int32 x = 1;
  int32 y = 2;
  int32 width = 3;
  int32 height = 4;
}

// ==================== 文档预处理 ====================

message ExtractTextRequest {
  string documentId = 1;
  string fileType = 2;
  string fileUrl = 3;
}

message ExtractTextResponse {
  string text = 1;
  int32 pageCount = 2;
  int32 wordCount = 3;
  repeated PageText pages = 4;
}

message PageText {
  int32 pageNumber = 1;
  string text = 2;
}

message ExtractImagesRequest {
  string documentId = 1;
  string fileType = 2;
  string fileUrl = 3;
}

message ExtractImagesResponse {
  repeated ExtractedImage images = 1;
  int32 totalImages = 2;
}

message ExtractedImage {
  int32 pageNumber = 1;
  string imageUrl = 2;
  int32 width = 3;
  int32 height = 4;
  string format = 5; // 'jpg' | 'png'
}

